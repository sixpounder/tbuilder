{"name":"Tbuilder","tagline":"A simple module to generate folders/file structures from templates","body":"# TBUILDER\r\n\r\n[![Build Status](https://travis-ci.org/sixpounder/tbuilder.svg?branch=master)](https://travis-ci.org/sixpounder/tbuilder)\r\n\r\nA simple module to generate folders/file structures from templates. Useful to create application skeletons from personal templates.\r\n\r\n##Â Usage\r\n\r\n```bash\r\nnpm install [--save] tbuilder\r\n```\r\n```javascript\r\nvar TBuilder = require('tbuilder');\r\nvar builder = new TBuilder({\r\n  exitOnError: true,\r\n  test: false,\r\n  template: _.template\r\n});\r\n\r\nbuilder\r\n  .build({ source: './source', target: '/some/target/path'}, function(err) {\r\n    // Done\r\n  }).on('error', function(err) {\r\n    console.log(\"Whoops!\");\r\n  });\r\n  // .on(...)\r\n```\r\n\r\n## Constructor options\r\n- **exitOnError**: *boolean* stops the build process if some error occurs while processing a file. Default is true.\r\n- **test**: *boolean* defaults to false. If true, no files or folder will be created during the build.\r\n- **template**: *function* the function used to compile a template from a file. By default, *template* function from lodash is used.\r\n- **templateSettings**: *object* options for the template function. Since **template** defaults to lodash template function, this will be a reference to _.templateSettings.\r\n\r\n## Build options\r\n- **ext**: *string* the extension to look in files to process. Default is *.template*. The specified extension is removed on the compiled version. Example:\r\n\r\n```bash\r\n  /source/file1.js.template -> /target/file1.js\r\n  /source/readme.md -> /target/readme.md\r\n```\r\n\r\n- **source**: *string* the root of the source directory containing the files to build\r\n- **target**: *string* the directory in which files will be built\r\n\r\n## Build callback\r\nA *function* that will be called once the build is complete, providing an *error* if something went wrong.\r\n\r\n\r\n## Events\r\n- **error**: fired when an error occurs\r\n- **file**: emitted when a file is found and queued for processing\r\n- **directory**: emitted when a sub directory of *source* path is walked by the crawler\r\n- **compiled**: emitted when a template is successfully compiled\r\n- **generated**: emitted when a file under *target* is successfully created\r\n- **end**: emitted when the build process completes\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}